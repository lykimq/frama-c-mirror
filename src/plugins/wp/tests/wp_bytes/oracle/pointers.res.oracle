# frama-c -wp -wp-model 'Bytes' [...]
[kernel] Parsing pointers.i (no preprocessing)
[wp] Running WP plugin...
[wp] [Valid] Goal addr_formal_exits (Cfg) (Unreachable)
[wp] [Valid] Goal addr_formal_terminates (Cfg) (Trivial)
[wp] Warning: Missing RTE guards
[wp] [Valid] Goal addr_glob_exits (Cfg) (Unreachable)
[wp] [Valid] Goal addr_glob_terminates (Cfg) (Trivial)
[wp] [Valid] Goal addr_local_ko_exits (Cfg) (Unreachable)
[wp] [Valid] Goal addr_local_ko_terminates (Cfg) (Trivial)
[wp] [Valid] Goal addr_local_ok_exits (Cfg) (Unreachable)
[wp] [Valid] Goal addr_local_ok_terminates (Cfg) (Trivial)
[wp] [Valid] Goal null_exits (Cfg) (Unreachable)
[wp] [Valid] Goal null_terminates (Cfg) (Trivial)
[wp] [Valid] Goal pointer_param_exits (Cfg) (Unreachable)
[wp] [Valid] Goal pointer_param_terminates (Cfg) (Trivial)
------------------------------------------------------------
  Function addr_formal
------------------------------------------------------------

Goal Check (file pointers.i, line 26):
Let a = shift_uint8(global(L_buffer_34), 0).
Let a_1 = global(P_f_33).
Assume { (* Heap *) Type: framed(mem_0) /\ sconst(mem_0). }
Prove: addr_of_int(read_uint64(write_uint64(mem_0, a, int_of_addr(a_1)), a)) =
    a_1.

------------------------------------------------------------
------------------------------------------------------------
  Function addr_glob
------------------------------------------------------------

Goal Check (file pointers.i, line 18):
Let a = shift_uint8(global(L_buffer_29), 0).
Let a_1 = global(G_g_26).
Assume { (* Heap *) Type: framed(mem_0) /\ sconst(mem_0). }
Prove: addr_of_int(read_uint64(write_uint64(mem_0, a, int_of_addr(a_1)), a)) =
    a_1.

------------------------------------------------------------
------------------------------------------------------------
  Function addr_local_ko
------------------------------------------------------------

Goal Check (file pointers.i, line 48):
Let a = shift_uint8(global(L_buffer_43), 0).
Assume { (* Heap *) Type: framed(mem_0) /\ linked(alloc_0) /\ sconst(mem_0).
}
Prove: !valid_rw(alloc_0[L_buffer_43 <- 8][L_l_44 <- 0],
          addr_of_int(read_uint64(write_uint64(mem_0, a,
                                    int_of_addr(global(L_l_44))), a)), 4).

------------------------------------------------------------
------------------------------------------------------------
  Function addr_local_ok
------------------------------------------------------------

Goal Check 'P' (file pointers.i, line 36):
Let a = global(L_l_38).
Let a_1 = shift_uint8(global(L_buffer_39), 0).
Assume {
  (* Heap *)
  Type: framed(mem_0) /\ sconst(mem_0).
  (* Initializer *)
  Init: read_sint32(mem_0, a) = 0.
}
Prove: addr_of_int(read_uint64(write_uint64(mem_0, a_1, int_of_addr(a)), a_1)) =
    a.

------------------------------------------------------------
------------------------------------------------------------
  Function null
------------------------------------------------------------

Goal Check (file pointers.i, line 8):
Let a = shift_uint8(global(L_buffer_22), 0).
Assume { (* Heap *) Type: framed(mem_0) /\ sconst(mem_0). }
Prove: addr_of_int(read_uint64(write_uint64(mem_0, a, 0), a)) = null.

------------------------------------------------------------
------------------------------------------------------------
  Function pointer_param
------------------------------------------------------------

Goal Check (file pointers.i, line 57):
Let a = shift_uint8(global(L_buffer_50), 0).
Assume {
  (* Heap *)
  Type: (region(f.base) <= 0) /\ framed(mem_0) /\ linked(alloc_0) /\
      sconst(mem_0).
  (* Pre-condition *)
  Have: valid_rw(alloc_0, f, 4).
}
Prove: addr_of_int(read_uint64(write_uint64(mem_0, a, int_of_addr(f)), a)) =
    f.

------------------------------------------------------------
