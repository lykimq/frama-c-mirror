# frama-c -wp -wp-model 'Bytes' [...]
[kernel] Parsing assigns_sep.i (no preprocessing)
[wp] Running WP plugin...
[kernel:annot:missing-spec] assigns_sep.i:13: Warning: 
  Neither code nor explicit exits and terminates for function assigns,
   generating default clauses. See -generated-spec-* options for more info
[kernel:annot:missing-spec] assigns_sep.i:16: Warning: 
  Neither code nor explicit exits and terminates for function assigns_r,
   generating default clauses. See -generated-spec-* options for more info
[kernel:annot:missing-spec] assigns_sep.i:19: Warning: 
  Neither code nor explicit exits and terminates for function assigns_l2,
   generating default clauses. See -generated-spec-* options for more info
[wp] [Valid] Goal assignment_exits (Cfg) (Unreachable)
[wp] [Valid] Goal assignment_terminates (Cfg) (Trivial)
[wp] Warning: Missing RTE guards
------------------------------------------------------------
  Function assignment
------------------------------------------------------------

Goal Check (file assigns_sep.i, line 9):
Let x = read_uint32(mem_0, array_0).
Let x_1 = read_uint32(write_uint8(mem_0, shift_uint8(array_0, 7), 0),
            array_0).
Assume {
  Type: is_uint32(x) /\ is_uint32(x_1).
  (* Heap *)
  Type: (region(array_0.base) <= 0) /\ framed(mem_0) /\ sconst(mem_0).
}
Prove: x_1 = x.

------------------------------------------------------------
------------------------------------------------------------
  Function assigns_clause
------------------------------------------------------------

Goal Termination-condition (generated) in 'assigns_clause':
Prove: true.

------------------------------------------------------------

Goal Exit-condition (generated) in 'assigns_clause':
Prove: true.

------------------------------------------------------------

Goal Check (file assigns_sep.i, line 27):
Let x = read_uint32(mem_0, array_0).
Let m = write_uint8(mem_0, shift_uint8(array_0, 7), v).
Let x_1 = read_uint32(m, array_0).
Let a = shift_uint8(array_0, 4).
Let x_2 = read_uint32(memcpy(m, mem_undef_0, a, a, 4), array_0).
Assume {
  Type: is_uint32(x) /\ is_uint32(x_1) /\ is_uint32(x_2).
  (* Heap *)
  Type: (region(array_0.base) <= 0) /\ framed(mem_0) /\ sconst(mem_0).
}
Prove: (x_1 = x) /\ (x_2 = x_1).

------------------------------------------------------------

Goal Check (file assigns_sep.i, line 30):
Let m = write_uint8(mem_0, shift_uint8(array_0, 7), v).
Let a = shift_uint8(array_0, 4).
Let a_1 = memcpy(m, mem_undef_0, a, a, 4).
Let x = read_uint32(mem_1, array_0).
Let x_1 = read_uint32(a_1, array_0).
Assume {
  Type: is_uint32(x) /\ is_uint32(read_uint32(mem_0, array_0)) /\
      is_uint32(read_uint32(m, array_0)) /\ is_uint32(x_1).
  (* Heap *)
  Type: (region(array_0.base) <= 0) /\ framed(mem_0) /\ sconst(mem_0).
  (* Call Effects *)
  Have: forall a_2 : addr.
      ((forall i : Z. (((i = 4) \/ (i = 6)) ->
        (shift_uint8(array_0, i) != a_2))) ->
      (raw_get(a_1, a_2) = raw_get(mem_1, a_2))).
}
Prove: x_1 = x.

------------------------------------------------------------
