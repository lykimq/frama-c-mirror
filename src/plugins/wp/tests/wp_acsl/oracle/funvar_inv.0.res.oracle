# frama-c -wp -wp-model 'Hoare' [...]
[kernel] Parsing funvar_inv.i (no preprocessing)
[wp] Running WP plugin...
[wp] [Valid] Goal f_exits (Cfg) (Unreachable)
[wp] [Valid] Goal f_terminates (Cfg) (Trivial)
[wp] Warning: Missing RTE guards
[wp] [Valid] Goal f2_exits (Cfg) (Unreachable)
[wp] [Valid] Goal f2_terminates (Cfg) (Trivial)
[wp] [Valid] Goal g_exits (Cfg) (Unreachable)
[wp] [Valid] Goal g_terminates (Cfg) (Trivial)
[wp] funvar_inv.i:24: Warning: Can not compare pointers in Empty model
[wp] funvar_inv.i:23: Warning: Can not compare pointers in Empty model
[wp] funvar_inv.i:40: Warning: Can not compare pointers in Empty model
[wp] funvar_inv.i:39: Warning: Can not compare pointers in Empty model
[wp] funvar_inv.i:57: Warning: Can not compare pointers in Empty model
[wp] funvar_inv.i:56: Warning: Can not compare pointers in Empty model
------------------------------------------------------------
  Function f
------------------------------------------------------------

Goal Post-condition 'P_startof' in 'f':
funvar_inv.i:23: warning from Empty Model:
 - Warning: Target turned to False, looking for context inconsistency
   Reason: Can not compare pointers in Empty model
Let x = G[0].
Assume {
  Type: is_sint32(i) /\ is_sint32(x) /\ is_sint32(G[1]).
  (* Heap *)
  Type: IsArray_sint32(G).
  If i <= 3
  Then { (* Else *) Have: G[i] = 0. }
}
Prove: x != 0.

------------------------------------------------------------

Goal Post-condition 'P_addr' in 'f':
funvar_inv.i:24: warning from Empty Model:
 - Warning: Target turned to False, looking for context inconsistency
   Reason: Can not compare pointers in Empty model
Let x = G[0].
Assume {
  Type: is_sint32(i) /\ is_sint32(x).
  (* Heap *)
  Type: IsArray_sint32(G).
  (* Goal *)
  When: (x != 0) /\ (G[1] = 0).
  If i <= 3
  Then { (* Else *) Have: G[i] = 0. }
}
Prove: false.

------------------------------------------------------------

Goal Loop assigns 'qed_ok,index':
Prove: true.

------------------------------------------------------------

Goal Decreasing of Loop variant at loop (file funvar_inv.i, line 32):
Prove: true.

------------------------------------------------------------

Goal Positivity of Loop variant at loop (file funvar_inv.i, line 32):
Prove: true.

------------------------------------------------------------
------------------------------------------------------------
  Function f2
------------------------------------------------------------

Goal Post-condition 'P_startof_shift' in 'f2':
funvar_inv.i:39: warning from Empty Model:
 - Warning: Target turned to False, looking for context inconsistency
   Reason: Can not compare pointers in Empty model
Let x = G[0].
Assume {
  Type: is_sint32(i) /\ is_sint32(x) /\ is_sint32(G[1]).
  (* Heap *)
  Type: IsArray_sint32(G).
  If i <= 3
  Then { (* Else *) Have: G[i] = 0. }
}
Prove: x != 0.

------------------------------------------------------------

Goal Post-condition 'P_addr_shift' in 'f2':
funvar_inv.i:40: warning from Empty Model:
 - Warning: Target turned to False, looking for context inconsistency
   Reason: Can not compare pointers in Empty model
Let x = G[0].
Assume {
  Type: is_sint32(i) /\ is_sint32(x).
  (* Heap *)
  Type: IsArray_sint32(G).
  (* Goal *)
  When: (x != 0) /\ (G[1] = 0).
  If i <= 3
  Then { (* Else *) Have: G[i] = 0. }
}
Prove: false.

------------------------------------------------------------

Goal Loop assigns 'qed_ok,index':
Prove: true.

------------------------------------------------------------

Goal Decreasing of Loop variant at loop (file funvar_inv.i, line 48):
Let x = G[i].
Let x_1 = (-4) * i.
Assume {
  Type: is_sint32(i) /\ is_sint32(G[0]) /\ is_sint32(G[1]) /\ is_sint32(x) /\
      is_sint32(1 + i).
  (* Heap *)
  Type: IsArray_sint32(G).
  (* Then *)
  Have: i <= 3.
  (* Then *)
  Have: x != 0.
}
Prove: ((12 - (4 * i)) / 4) < ((16 - (4 * i)) / 4).

------------------------------------------------------------

Goal Positivity of Loop variant at loop (file funvar_inv.i, line 48):
Prove: true.

------------------------------------------------------------
------------------------------------------------------------
  Function g
------------------------------------------------------------

Goal Post-condition 'P_addr_startof_shift' in 'g':
funvar_inv.i:56: warning from Empty Model:
 - Warning: Target turned to False, looking for context inconsistency
   Reason: Can not compare pointers in Empty model
Let x = G[0].
Assume {
  Type: is_sint32(i) /\ is_sint32(x) /\ is_sint32(G[1]).
  (* Heap *)
  Type: IsArray_sint32(G).
  If i <= 3
  Then { (* Else *) Have: G[i] = 0. }
}
Prove: x != 0.

------------------------------------------------------------

Goal Post-condition 'P_addr_addr_shift' in 'g':
funvar_inv.i:57: warning from Empty Model:
 - Warning: Target turned to False, looking for context inconsistency
   Reason: Can not compare pointers in Empty model
Let x = G[0].
Assume {
  Type: is_sint32(i) /\ is_sint32(x).
  (* Heap *)
  Type: IsArray_sint32(G).
  (* Goal *)
  When: (x != 0) /\ (G[1] = 0).
  If i <= 3
  Then { (* Else *) Have: G[i] = 0. }
}
Prove: false.

------------------------------------------------------------

Goal Loop assigns 'qed_ok':
Prove: true.

------------------------------------------------------------

Goal Decreasing of Loop variant at loop (file funvar_inv.i, line 65):
Let x = G[i].
Let x_1 = (-16) * i.
Assume {
  Type: is_sint32(i) /\ is_sint32(G[0]) /\ is_sint32(G[1]) /\ is_sint32(x) /\
      is_sint32(1 + i).
  (* Heap *)
  Type: IsArray_sint32(G).
  (* Then *)
  Have: i <= 3.
  (* Then *)
  Have: x != 0.
}
Prove: ((48 - (16 * i)) / 16) < ((64 - (16 * i)) / 16).

------------------------------------------------------------

Goal Positivity of Loop variant at loop (file funvar_inv.i, line 65):
Prove: true.

------------------------------------------------------------
[wp] funvar_inv.i:26: Warning: 
  Memory model hypotheses for function 'f':
  /*@ behavior wp_hoare:
        ensures \separated(\result, (int *)G + (..)); */
  int *f(void);
[wp] funvar_inv.i:42: Warning: 
  Memory model hypotheses for function 'f2':
  /*@ behavior wp_hoare:
        ensures \separated(\result, (int *)G + (..)); */
  int *f2(void);
[wp] funvar_inv.i:59: Warning: 
  Memory model hypotheses for function 'g':
  /*@ behavior wp_hoare:
        ensures \separated(\result, (int *)G + (..)); */
  int *g(void);
