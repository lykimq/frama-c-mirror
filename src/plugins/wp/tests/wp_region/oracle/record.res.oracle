# frama-c -wp -wp-model 'Region' [...]
[kernel] Parsing record.c (with preprocessing)
[wp] Running WP plugin...
[wp] [Valid] Goal f_exits (Cfg) (Unreachable)
[wp] [Valid] Goal f_terminates (Cfg) (Trivial)
[wp] Warning: Missing RTE guards
[region] record.c:22: Warning: Annotations not analyzed
------------------------------------------------------------
  Function f
------------------------------------------------------------

Goal Post-condition (file record.c, line 12) in 'f':
Let a = shiftfield_F1_S_g(q).
Let a_1 = shiftfield_F1_S_f(p).
Let x = Msint32_0[a_1].
Let x_1 = 1 + x.
Let m = Msint32_0[a_1 <- x_1].
Let a_2 = shiftfield_F1_S_f(q).
Let x_2 = m[a_2].
Let x_3 = m[a_2 <- x_2 - 1][a_1].
Assume {
  Type: is_sint32(x) /\ is_sint32(x_2) /\ is_sint32(x_3).
  (* Heap *)
  Type: (region(p.base) <= 0) /\ (region(q.base) <= 0) /\ framed(mem_0) /\
      sconst(mem_0).
  (* Goal *)
  When: q != p.
  (* Pre-condition *)
  Have: P_pointed(p, q).
  (* Assertion *)
  Have: read_sint32(write_sint16(write_sint16(mem_0, shift_sint16(a, 0), -1),
                      shift_sint16(a, 1), -1), a) = (-1).
}
Prove: x_3 = x_1.

------------------------------------------------------------

Goal Post-condition (file record.c, line 13) in 'f':
Prove: true.

------------------------------------------------------------

Goal Post-condition (file record.c, line 14) in 'f':
Let a = shiftfield_F1_S_g(q).
Let m = write_sint16(write_sint16(mem_0, shift_sint16(a, 0), -1),
          shift_sint16(a, 1), -1).
Let x = read_sint32(write_sint32(m, a, 0), a).
Assume {
  Type: is_sint32(x).
  (* Heap *)
  Type: (region(p.base) <= 0) /\ (region(q.base) <= 0) /\ framed(mem_0) /\
      sconst(mem_0).
  (* Pre-condition *)
  Have: P_pointed(p, q).
  (* Assertion *)
  Have: read_sint32(m, a) = (-1).
}
Prove: x = 0.

------------------------------------------------------------

Goal Assertion (file record.c, line 22):
Let a = shiftfield_F1_S_g(q).
Let x = read_sint32(write_sint16(write_sint16(mem_0, shift_sint16(a, 0), -1),
                      shift_sint16(a, 1), -1), a).
Assume {
  Type: is_sint32(x).
  (* Heap *)
  Type: (region(p.base) <= 0) /\ (region(q.base) <= 0) /\ framed(mem_0) /\
      sconst(mem_0).
  (* Pre-condition *)
  Have: P_pointed(p, q).
}
Prove: x = (-1).

------------------------------------------------------------
