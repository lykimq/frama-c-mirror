# frama-c -wp [...]
[kernel] Parsing strat-list-concat-repeat.i (no preprocessing)
[wp] Running WP plugin...
[wp] [Valid] Goal target_exits (Cfg) (Unreachable)
[wp] [Valid] Goal target_terminates (Cfg) (Trivial)
[wp] Warning: Missing RTE guards
[wp] 3 goals scheduled
[wp] [Valid] typed_target_assigns (Qed)
[wp] [Unsuccess] typed_target_ensures_post1 (Tactic) (Qed)
[wp] [Unsuccess] typed_target_ensures_post2 (Tactic) (Qed)
[wp] Proved goals:    3 / 5
  Terminating:     1
  Unreachable:     1
  Qed:             1
  Unsuccess:       2
------------------------------------------------------------
  Function target
------------------------------------------------------------

Goal Post-condition 'post1' in 'target':
Assume { Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(c) /\ is_sint32(d).
}
Prove: P_p1234([ a, b, c, d ]).
Prover Script returns Unsuccess

------------------------------------------------------------
Subgoal 1/1:
 - Post-condition 'post1'
 - Definition (Unfold 'P_p1234')
Goal Wp.Tactical.typed_target_ensures_post1-0 (generated):
Assume { Type: is_sint32(a) /\ is_sint32(b) /\ is_sint32(c) /\ is_sint32(d).
}
Prove: [ a, b, c, d ] = [ 1, 2, 3, 4 ].

------------------------------------------------------------
------------------------------------------------------------
  Function target
------------------------------------------------------------

Goal Post-condition 'post2' in 'target':
Assume { Type: is_sint32(a). }
Prove: P_p1234(([ a ] *^ 4)).
Prover Script returns Unsuccess

------------------------------------------------------------
Subgoal 1/1:
 - Post-condition 'post2'
 - Definition (Unfold 'P_p1234')
Goal Wp.Tactical.typed_target_ensures_post2-0 (generated):
Assume { Type: is_sint32(a). }
Prove: ([ a ] *^ 4) = [ 1, 2, 3, 4 ].

------------------------------------------------------------
------------------------------------------------------------
 Functions                 WP     Alt-Ergo  Total   Success
  target                    1        -        3      33.3%
------------------------------------------------------------
