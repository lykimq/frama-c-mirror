# frama-c -wp [...]
[kernel] Parsing strategy.c (with preprocessing)
[wp] Running WP plugin...
[wp] [Valid] Goal target_exits (Cfg) (Unreachable)
[wp] [Valid] Goal target_terminates (Cfg) (Trivial)
[wp] Warning: Missing RTE guards
[wp] 2 goals scheduled
[wp] [Valid] typed_target_assigns (Qed)
[wp] [Unsuccess] typed_target_ensures (Tactics 3) (Alt-Ergo 6/7) (Cached)
[wp] Proved goals:    3 / 4
  Terminating:     1
  Unreachable:     1
  Qed:             1
  Unsuccess:       1
------------------------------------------------------------
  Function target
------------------------------------------------------------

Goal Post-condition (file strategy.c, line 46) in 'target':
Assume {
  Type: is_uint32(t) /\ is_uint32(x) /\ is_uint32(y) /\ is_uint32(z).
  (* Pre-condition *)
  Have: (t <= 999) /\ (x <= 999) /\ (y <= 999) /\ (z <= 999).
}
Prove: P_P(to_sint32(t + to_uint32(z + to_uint32(x + y)))).
Prover Alt-Ergo returns Unsuccess
Prover Script returns Unsuccess

------------------------------------------------------------
Subgoal 1/1:
 - Post-condition
 - Overflow (In-Range)
 - Overflow (In-Range)
 - Overflow (In-Range)
Goal Wp.Tactical.typed_target_ensures-6 (generated):
Let x_1 = t + x + y + z.
Let x_2 = x + y + z.
Let x_3 = x + y.
Assume {
  Have: 0 <= x_3.
  Have: x_3 <= 4294967295.
  Have: 0 <= x_2.
  Have: x_2 <= 4294967295.
  Have: (-2147483648) <= x_1.
  Have: x_1 <= 2147483647.
  Type: is_uint32(t) /\ is_uint32(x) /\ is_uint32(y) /\ is_uint32(z).
  (* Pre-condition *)
  Have: (t <= 999) /\ (x <= 999) /\ (y <= 999) /\ (z <= 999).
}
Prove: P_P(x_1).
Prover Alt-Ergo returns Unsuccess

------------------------------------------------------------
------------------------------------------------------------
 Functions                 WP     Alt-Ergo  Total   Success
  target                    1        -        2      50.0%
------------------------------------------------------------
