# frama-c -wp [...]
[kernel] Parsing euclid2.c (with preprocessing)
[wp] Running WP plugin...
[wp] [Valid] Goal euclid_gcd_exits (Cfg) (Unreachable)
[wp] [Valid] Goal euclid_gcd_terminates (Cfg) (Trivial)
[wp] Warning: Missing RTE guards
------------------------------------------------------------
  Function euclid_gcd
------------------------------------------------------------

Goal Post-condition (file euclid2.c, line 9) in 'euclid_gcd':
Let x = number.Gcd.gcd(a, b).
Assume {
  Type: is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(a_2) /\ is_sint32(b) /\
      is_sint32(euclid_gcd_0).
  (* Pre-condition *)
  Have: IAbs.abs(a) <= 2147483647.
  (* Pre-condition *)
  Have: IAbs.abs(b) <= 2147483647.
  (* Invariant *)
  Have: number.Gcd.gcd(a_2, 0) = x.
  If a_2 < 0
  Then { Have: a_2 = a_1. Have: (a_1 + euclid_gcd_0) = 0. }
  Else { Have: euclid_gcd_0 = a_2. }
}
Prove: x = euclid_gcd_0.

------------------------------------------------------------

Goal Preservation of Invariant (file euclid2.c, line 17):
Let x = number.Gcd.gcd(a_2, b).
Let x_1 = a_1 % a.
Assume {
  Type: is_sint32(a_2) /\ is_sint32(a) /\ is_sint32(a_1) /\ is_sint32(b) /\
      is_sint32(x_1).
  (* Pre-condition *)
  Have: IAbs.abs(a_2) <= 2147483647.
  (* Pre-condition *)
  Have: IAbs.abs(b) <= 2147483647.
  (* Invariant *)
  Have: number.Gcd.gcd(a_1, a) = x.
  (* Then *)
  Have: a != 0.
}
Prove: number.Gcd.gcd(a, x_1) = x.

------------------------------------------------------------

Goal Establishment of Invariant (file euclid2.c, line 17):
Prove: true.

------------------------------------------------------------

Goal Loop assigns (file euclid2.c, line 16):
Prove: true.

------------------------------------------------------------

Goal Assigns nothing in 'euclid_gcd' (1/3):
Effect at line 20
Prove: true.

------------------------------------------------------------

Goal Assigns nothing in 'euclid_gcd' (2/3):
Effect at line 25
Prove: true.

------------------------------------------------------------

Goal Assigns nothing in 'euclid_gcd' (3/3):
Effect at line 25
Prove: true.

------------------------------------------------------------

Goal Decreasing of Loop variant at loop (file euclid2.c, line 20):
Let x = a % a_1.
Let x_1 = number.Gcd.gcd(a_2, b).
Assume {
  Type: is_sint32(a_2) /\ is_sint32(a_1) /\ is_sint32(a) /\ is_sint32(b) /\
      is_sint32(x).
  (* Pre-condition *)
  Have: IAbs.abs(a_2) <= 2147483647.
  (* Pre-condition *)
  Have: IAbs.abs(b) <= 2147483647.
  (* Invariant *)
  Have: number.Gcd.gcd(a, a_1) = x_1.
  (* Then *)
  Have: a_1 != 0.
  (* Invariant *)
  Have: number.Gcd.gcd(a_1, x) = x_1.
}
Prove: IAbs.abs(x) < IAbs.abs(a_1).

------------------------------------------------------------

Goal Positivity of Loop variant at loop (file euclid2.c, line 20):
Prove: true.

------------------------------------------------------------
