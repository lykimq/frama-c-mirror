[kernel] Parsing union_vmap.c (with preprocessing)
[alias] analysing function: CPS_ParseKey
[alias] analysing instruction: char *s2 = CPS_SplitWord((char *)"a");
[alias] analysing function: CPS_SplitWord
[alias] May-aliases at the end of function CPS_SplitWord: <none>
[alias] May-alias graph at the end of function CPS_SplitWord:
  <empty>
[alias] Summary of function CPS_SplitWord:
  formals: line    returns: line    state: <none>
[alias] May-aliases after instruction  char *s2 = CPS_SplitWord((char *)"a");  are
  <none>
[alias] May-alias graph after instruction  char *s2 = CPS_SplitWord((char *)"a");
  is    4:{ s2 } → 3:{  }
[alias] analysing instruction: char *s3 = CPS_SplitWord((char *)"b");
[alias] May-aliases after instruction  char *s3 = CPS_SplitWord((char *)"b");  are
  <none>
[alias] May-alias graph after instruction  char *s3 = CPS_SplitWord((char *)"b");
  is    4:{ s2 } → 3:{  }   8:{ s3 } → 7:{  }
[alias] analysing instruction: *key = s3;
[alias] May-aliases after instruction  *key = s3;  are  { *key; s3 }
[alias] May-alias graph after instruction  *key = s3;  is
  4:{ s2 } → 3:{  }   10:{ key } → 11:{ s3 }   11:{ s3 } → 12:{  }
[alias] analysing instruction: *key = s2;
[alias] May-aliases after instruction  *key = s2;  are  { *key; s2 }
[alias] May-alias graph after instruction  *key = s2;  is
  8:{ s3 } → 7:{  }   13:{ key } → 14:{ s2 }   14:{ s2 } → 15:{  }
[alias] May-aliases at the end of function CPS_ParseKey: { *key; s2; s3 }
[alias] May-alias graph at the end of function CPS_ParseKey:
  4:{ s2; s3 } → 3:{  }   10:{ key } → 4:{ s2; s3 }
[alias] Summary of function CPS_ParseKey:
  formals:     returns: <none>    state: { *key; s2; s3 }
[alias] analysing function: CPS_SplitWord
[alias] May-aliases at the end of function CPS_SplitWord: <none>
[alias] May-alias graph at the end of function CPS_SplitWord:
  <empty>
[alias] Summary of function CPS_SplitWord:
  formals: line    returns: line    state: <none>
[alias] Analysis complete
