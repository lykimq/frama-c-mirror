[kernel] Parsing structure1.c (with preprocessing)
[alias] analysing function: main
[alias] analysing instruction: st_1_t x = {.a = 0, .b = 1};
[alias] May-aliases after instruction  st_1_t x = {.a = 0, .b = 1};  are  <none>
[alias] May-alias graph after instruction  st_1_t x = {.a = 0, .b = 1};  is
  <empty>
[alias] analysing instruction: st_2_t y = {.a = 3, .c = 4};
[alias] May-aliases after instruction  st_2_t y = {.a = 3, .c = 4};  are  <none>
[alias] May-alias graph after instruction  st_2_t y = {.a = 3, .c = 4};  is
  <empty>
[alias] analysing instruction: st_1_t *p_x = & x;
[alias] May-aliases after instruction  st_1_t *p_x = & x;  are  <none>
[alias] May-alias graph after instruction  st_1_t *p_x = & x;  is
  0:{ p_x } → 1:{ x }
[alias] analysing instruction: st_2_t *p_y = & y;
[alias] May-aliases after instruction  st_2_t *p_y = & y;  are  <none>
[alias] May-alias graph after instruction  st_2_t *p_y = & y;  is
  0:{ p_x } → 1:{ x }   4:{ p_y } → 5:{ y }
[alias] analysing instruction: p_x->a = 3;
[alias] May-aliases after instruction  p_x->a = 3;  are  <none>
[alias] May-alias graph after instruction  p_x->a = 3;  is
  0:{ p_x } → 1:{ x }   4:{ p_y } → 5:{ y }
[alias] analysing instruction: p_x = (st_1_t *)p_y;
[alias] May-aliases after instruction  p_x = (st_1_t *)p_y;  are  { p_x; p_y }
[alias] May-alias graph after instruction  p_x = (st_1_t *)p_y;  is
  0:{ p_x; p_y } → 1:{ x; y }
[alias] analysing instruction: __retres = 0;
[alias] May-aliases after instruction  __retres = 0;  are  { p_x; p_y }
[alias] May-alias graph after instruction  __retres = 0;  is
  0:{ p_x; p_y } → 1:{ x; y }
[alias] May-aliases at the end of function main: { p_x; p_y }
[alias] May-alias graph at the end of function main:
  0:{ p_x; p_y } → 1:{ x; y }
[alias] Summary of function main:
  formals:     returns: __retres    state: { p_x; p_y }
[alias] Analysis complete
