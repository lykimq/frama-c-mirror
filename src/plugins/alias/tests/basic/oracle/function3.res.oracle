[kernel] Parsing function3.c (with preprocessing)
[alias] analysing function: f1
[alias] analysing instruction: int *tmp = x;
[alias] May-aliases after instruction  int *tmp = x;  are  { x; tmp }
[alias] May-alias graph after instruction  int *tmp = x;  is
  0:{ x; tmp } → 1:{  }
[alias] analysing instruction: x = y;
[alias] May-aliases after instruction  x = y;  are  { x; y; tmp }
[alias] May-alias graph after instruction  x = y;  is    0:{ x; y; tmp } → 1:{  }
[alias] analysing instruction: y = tmp;
[alias] May-aliases after instruction  y = tmp;  are  { x; y; tmp }
[alias] May-alias graph after instruction  y = tmp;  is    0:{ x; y; tmp } → 1:{  }
[alias] analysing instruction: __retres = (void *)0;
[alias] May-aliases after instruction  __retres = (void *)0;  are  { x; y; tmp }
[alias] May-alias graph after instruction  __retres = (void *)0;  is
  0:{ x; y; tmp } → 1:{  }
[alias] May-aliases at the end of function f1: { x; y; tmp }
[alias] May-alias graph at the end of function f1:
  0:{ x; y; tmp } → 1:{  }
[alias] Summary of function f1:
  formals: x  y    returns: __retres    state: { x; y; tmp }
[alias] analysing function: main
[alias] analysing instruction: int *a = (int *)0;
[alias] May-aliases after instruction  int *a = (int *)0;  are  <none>
[alias] May-alias graph after instruction  int *a = (int *)0;  is    <empty>
[alias] analysing instruction: int *b = (int *)0;
[alias] May-aliases after instruction  int *b = (int *)0;  are  <none>
[alias] May-alias graph after instruction  int *b = (int *)0;  is    <empty>
[alias] analysing instruction: int *c = (int *)0;
[alias] May-aliases after instruction  int *c = (int *)0;  are  <none>
[alias] May-alias graph after instruction  int *c = (int *)0;  is    <empty>
[alias] analysing instruction: int *d = (int *)0;
[alias] May-aliases after instruction  int *d = (int *)0;  are  <none>
[alias] May-alias graph after instruction  int *d = (int *)0;  is    <empty>
[alias] analysing instruction: f1(a,b);
[alias] May-aliases after instruction  f1(a,b);  are  { a; b }
[alias] May-alias graph after instruction  f1(a,b);  is
  16:{ a } → 9:{  }   18:{ b } → 9:{  }
[alias] analysing instruction: f1(c,d);
[alias] May-aliases after instruction  f1(c,d);  are  { a; b }  { c; d }
[alias] May-alias graph after instruction  f1(c,d);  is
  16:{ a } → 9:{  }   18:{ b } → 9:{  }   28:{ c } → 21:{  }
  30:{ d } → 21:{  }
[alias] analysing instruction: __retres = 0;
[alias] May-aliases after instruction  __retres = 0;  are  { a; b }  { c; d }
[alias] May-alias graph after instruction  __retres = 0;  is
  16:{ a } → 9:{  }   18:{ b } → 9:{  }   28:{ c } → 21:{  }
  30:{ d } → 21:{  }
[alias] May-aliases at the end of function main: { a; b }  { c; d }
[alias] May-alias graph at the end of function main:
  16:{ a } → 9:{  }   18:{ b } → 9:{  }   28:{ c } → 21:{  }
  30:{ d } → 21:{  }
[alias] Summary of function main:
  formals:     returns: __retres    state: { a; b }  { c; d }
[alias] Analysis complete
