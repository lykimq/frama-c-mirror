[kernel] Parsing addrof.c (with preprocessing)
[alias] analysing function: main
[alias] analysing instruction: a = & x;
[alias] May-aliases after instruction  a = & x;  are  { *a; x }
[alias] May-alias graph after instruction  a = & x;  is
  0:{ a } → 1:{ x }   1:{ x } → 2:{  }
[alias] analysing instruction: b = & y;
[alias] May-aliases after instruction  b = & y;  are
  { *a; x }  { *b; y }  { *(*b); *y }
[alias] May-alias graph after instruction  b = & y;  is
  0:{ a } → 1:{ x }   1:{ x } → 2:{  }   6:{ b } → 7:{ y }
  7:{ y } → 8:{  }   8:{  } → 9:{  }
[alias] analysing instruction: y = & z;
[alias] May-aliases after instruction  y = & z;  are
  { *a; x }  { *b; y }  { *(*b); *y; z }
[alias] May-alias graph after instruction  y = & z;  is
  0:{ a } → 1:{ x }   1:{ x } → 2:{  }   6:{ b } → 7:{ y }
  7:{ y } → 8:{ z }   8:{ z } → 9:{  }
[alias] analysing instruction: *y = x;
[alias] May-aliases after instruction  *y = x;  are
  { *b; a; y }  { *(*b); *a; *y; x }
[alias] May-alias graph after instruction  *y = x;  is
  0:{ a } → 8:{ x }   6:{ b } → 7:{ y }   7:{ y } → 8:{ x }
  8:{ x } → 9:{  }
[alias] analysing instruction: __retres = 0;
[alias] May-aliases after instruction  __retres = 0;  are
  { *b; a; y }  { *(*b); *a; *y; x; z }
[alias] May-alias graph after instruction  __retres = 0;  is
  0:{ a } → 1:{ x; z }   1:{ x; z } → 2:{  }   6:{ b } → 7:{ y }
  7:{ y } → 1:{ x; z }
[alias] May-aliases at the end of function main:
  { *b; a; y }  { *(*b); *a; *y; x; z }
[alias] May-alias graph at the end of function main:
  0:{ a } → 1:{ x; z }   1:{ x; z } → 2:{  }   6:{ b } → 7:{ y }
  7:{ y } → 1:{ x; z }
[alias] Summary of function main:
  formals:     returns: __retres
  state: { *b; a; y }  { *(*b); *a; *y; x; z }
[alias] Analysis complete
