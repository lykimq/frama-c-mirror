[variadic] FRAMAC_SHARE/libc/stdio.h:244: 
  Declaration of variadic function fprintf.
[variadic] FRAMAC_SHARE/libc/stdio.h:246: 
  Declaration of variadic function fscanf.
[variadic] FRAMAC_SHARE/libc/stdio.h:248: 
  Declaration of variadic function printf.
[variadic] FRAMAC_SHARE/libc/stdio.h:249: 
  Declaration of variadic function scanf.
[variadic] FRAMAC_SHARE/libc/stdio.h:250: 
  Declaration of variadic function snprintf.
[variadic] FRAMAC_SHARE/libc/stdio.h:252: 
  Declaration of variadic function sprintf.
[variadic] FRAMAC_SHARE/libc/stdio.h:254: 
  Declaration of variadic function sscanf.
[variadic] FRAMAC_SHARE/libc/stdio.h:587: 
  Declaration of variadic function dprintf.
[variadic] FRAMAC_SHARE/libc/stdio.h:649: 
  Declaration of variadic function asprintf.
[variadic] scanf.c:12: 
  Translating call to scanf to a call to the specialized version scanf_va_1.
[variadic] scanf.c:15: 
  Translating call to scanf to a call to the specialized version scanf_va_2.
[variadic] scanf.c:17: 
  Translating call to scanf to a call to the specialized version scanf_va_3.
[variadic] scanf.c:25: Warning: 
  Unable to find type intmax_t in the source code which should be used in this call:
  no specification will be generated.
  Note that due to cleanup, the type may have been defined in the original code but not used anywhere.
  Did you include <stdint.h> ?
[variadic] scanf.c:25: 
  Fallback translation of call scanf to a call to the specialized version scanf_fallback_1.
[eva] Analyzing a complete application starting at main
[eva] using specification for function scanf
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function main:
  c[0] ∈ [--..--]
   [1..9] ∈ [--..--] or UNINITIALIZED
  i ∈ [--..--]
  wc ∈ [--..--]
  __retres ∈ {0}
  S___fc_stdin[0..1] ∈ [--..--]
/* Generated by Frama-C */
#include "errno.h"
#include "stdarg.h"
#include "stddef.h"
#include "stdio.h"
/*@ requires \valid(param1);
    requires \valid(param2);
    requires valid_read_string(format);
    ensures \initialized(param1);
    ensures \initialized(param2);
    assigns \result, __fc_stdin->__fc_FILE_data, *param2, *param1,
            *(param0 + (0 ..));
    assigns \result
      \from (indirect: __fc_stdin->__fc_FILE_id),
            (indirect: __fc_stdin->__fc_FILE_data),
            (indirect: *(format + (0 ..)));
    assigns __fc_stdin->__fc_FILE_data
      \from (indirect: __fc_stdin->__fc_FILE_id), __fc_stdin->__fc_FILE_data,
            (indirect: *(format + (0 ..)));
    assigns *param2
      \from (indirect: __fc_stdin->__fc_FILE_id), __fc_stdin->__fc_FILE_data,
            (indirect: *(format + (0 ..)));
    assigns *param1
      \from (indirect: __fc_stdin->__fc_FILE_id), __fc_stdin->__fc_FILE_data,
            (indirect: *(format + (0 ..)));
    assigns *(param0 + (0 ..))
      \from (indirect: __fc_stdin->__fc_FILE_id), __fc_stdin->__fc_FILE_data,
            (indirect: *(format + (0 ..)));
 */
int scanf_va_1(char const * restrict format, char *param0, char *param1,
               int *param2);

/*@ requires \valid(param0);
    requires valid_read_string(format);
    ensures \initialized(param0);
    assigns \result, __fc_stdin->__fc_FILE_data, *param0;
    assigns \result
      \from (indirect: __fc_stdin->__fc_FILE_id),
            (indirect: __fc_stdin->__fc_FILE_data),
            (indirect: *(format + (0 ..)));
    assigns __fc_stdin->__fc_FILE_data
      \from (indirect: __fc_stdin->__fc_FILE_id), __fc_stdin->__fc_FILE_data,
            (indirect: *(format + (0 ..)));
    assigns *param0
      \from (indirect: __fc_stdin->__fc_FILE_id), __fc_stdin->__fc_FILE_data,
            (indirect: *(format + (0 ..)));
 */
int scanf_va_2(char const * restrict format, wchar_t *param0);

/*@ requires \valid(param0);
    requires valid_read_string(format);
    ensures \initialized(param0);
    assigns \result, __fc_stdin->__fc_FILE_data, *param0;
    assigns \result
      \from (indirect: __fc_stdin->__fc_FILE_id),
            (indirect: __fc_stdin->__fc_FILE_data),
            (indirect: *(format + (0 ..)));
    assigns __fc_stdin->__fc_FILE_data
      \from (indirect: __fc_stdin->__fc_FILE_id), __fc_stdin->__fc_FILE_data,
            (indirect: *(format + (0 ..)));
    assigns *param0
      \from (indirect: __fc_stdin->__fc_FILE_id), __fc_stdin->__fc_FILE_data,
            (indirect: *(format + (0 ..)));
 */
int scanf_va_3(char const * restrict format, char *param0);

int main(void)
{
  int __retres;
  char c[10];
  int i;
  wchar_t wc;
  scanf("Hello %*10le %% %10s %[^]world] %d !",c,c,& i); /* scanf_va_1 */
  scanf("%lc",& wc); /* scanf_va_2 */
  scanf("%1c",c); /* scanf_va_3 */
  __retres = 0;
  return __retres;
}

int scanf_fallback_1(char const * restrict format, int *param0);

void warn_about_intmax_t(void)
{
  int i;
  scanf("%jd",& i); /* scanf_fallback_1 */
  return;
}


