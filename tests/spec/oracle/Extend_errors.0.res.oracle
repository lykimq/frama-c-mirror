[kernel:acsl-extension] Registering acsl extension unfold
[kernel:acsl-extension] Registering acsl extension calls
[kernel:acsl-extension] Registering acsl extension instanceof
[kernel:acsl-extension] Registering acsl extension \eva::widen_hints
[kernel:acsl-extension] Registering acsl extension \eva::slevel
[kernel:acsl-extension] Registering acsl extension \eva::unroll
[kernel:acsl-extension] Registering acsl extension \eva::split
[kernel:acsl-extension] Registering acsl extension \eva::merge
[kernel:acsl-extension] Registering acsl extension \eva::dynamic_split
[kernel:acsl-extension] Registering acsl extension \eva::subdivide
[kernel:acsl-extension] Registering acsl extension \eva::eva_allocate
[kernel:acsl-extension] Registering acsl extension \eva::array_partition
[kernel:acsl-extension] Registering acsl extension \eva::eva_domain_scope
[kernel:acsl-extension] Registering acsl extension \eva::taints
[kernel:acsl-extension] Registering acsl extension \eva::taint
[test-extend_errors] Linking.
[kernel:acsl-extension] Registering acsl extension \myplugin1::foo
[kernel:acsl-extension] Registering acsl extension \myplugin2::foo
[kernel:acsl-extension] Registering acsl extension \myplugin2::bar
[kernel:acsl-extension] Registering acsl extension \myplugin1::foo
[kernel:acsl-extension] Warning: 
  Trying to register ACSL extension foo twice with plugin myplugin1. Ignoring the second extension
[kernel:acsl-extension] Registering acsl extension \myplugin1::unfold
[kernel:acsl-extension] Warning: 
  Trying to register ACSL extension unfold reserved by frama-c. Rename this extension to avoid conflict with the kernel. Ignored extension
[kernel] Triggering User Error :
[kernel] <unknown location>: User Error: 
  Conflicts on extension named 'foo' registered by different plugins (myplugin2,
  myplugin1), use '\plugin::ext_name' syntax to avoid this ambiguity
[kernel] Triggering Unsupported :
[kernel] <unknown location>: Failure: 
  Unsupported clause extension named '\myplugin1::bar'
[kernel] Parsing Extend_errors.c (with preprocessing)
/* Generated by Frama-C */
/*@ \myplugin1::foo x ≡ 0;
    \myplugin2::foo x ≡ 0; */
int ok(int x)
{
  /* sid:2 */
  return x;
}


