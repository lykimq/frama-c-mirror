[kernel] Parsing unroll_visit.i (no preprocessing)
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  
[eva] unroll_visit.i:12: assertion got status valid.
[eva:partition] unroll_visit.i:10: starting to merge loop iterations
[eva] Recording results for main
[eva] Done for function main
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function main:
  i âˆˆ {100}
[from] Computing for function main
[from] Done for function main
[from] ====== DEPENDENCIES COMPUTED ======
  These dependencies hold at termination for the executions that terminate:
[from] Function main:
  NO EFFECTS
[from] ====== END OF DEPENDENCIES ======
[inout] Out (internal) for function main:
    i
[inout] Inputs for function main:
    \nothing
/* Generated by Frama-C */
typedef char i8;
void main(void)
{
  i8 i = (i8)0;
  if (! ((int)i < 100)) goto unfolding_2_loop;
  i = (i8)((int)i - 1);
  /*@ assert i < 100; */ ;
  i = (i8)((int)i + 1);
  i = (i8)((int)i + 1);
  unfolding_4_loop: ;
  if (! ((int)i < 100)) goto unfolding_2_loop;
  i = (i8)((int)i - 1);
  /*@ assert i < 100; */ ;
  i = (i8)((int)i + 1);
  i = (i8)((int)i + 1);
  unfolding_3_loop: ;
  /*@ loop unfold 2;
      loop unfold "done", 2; */
  while ((int)i < 100) {
    i = (i8)((int)i - 1);
    /*@ assert i < 100; */ ;
    i = (i8)((int)i + 1);
    i = (i8)((int)i + 1);
  }
  unfolding_2_loop: ;
  return;
}


