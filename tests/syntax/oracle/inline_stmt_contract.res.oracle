[kernel] Parsing inline_stmt_contract.i (no preprocessing)
/* Generated by Frama-C */
int X;
int f(void)
{
  /*@ assert inline_stmt_contract: X ≡ 0; */
  /*@ requires X ≡ 0;
      ensures X ≡ 1; */
  X ++;
  /*@ assert inline_stmt_contract: X ≡ 1; */ ;
  return X;
}

int g(void)
{
  __fc_inline_contract_label_0:
  /*@ assert inline_stmt_contract: X ≥ 0 ⇒ X > -1; */
  /*@ behavior b:
        assumes X ≥ 0;
        requires X > -1;
        ensures X ≡ 0; */
  if (X >= 0) X = 0; else X = -1;
  /*@
  assert
  inline_stmt_contract: \at(X ≥ 0,__fc_inline_contract_label_0) ⇒ X ≡ 0;
   */
  ;
  return X;
}

int h(void)
{
  int __retres;
  /*@ ensures \false; */
  {
    __retres = 1;
    goto return_label;
  }
  /*@ assert inline_stmt_contract: \false; */ ;
  return_label: return __retres;
}

int i(void)
{
  __fc_inline_contract_label_0:
  /*@ behavior b0:
        assumes X ≡ 0;
        ensures X ≡ 1; */
  X ++;
  /*@
  assert
  inline_stmt_contract: \at(X ≡ 0,__fc_inline_contract_label_0) ⇒ X ≡ 1;
   */
  ;
  __fc_inline_contract_label_1:
  /*@ behavior b1:
        assumes X ≡ 1;
        ensures X ≡ 2; */
  X ++;
  /*@
  assert
  inline_stmt_contract: \at(X ≡ 1,__fc_inline_contract_label_1) ⇒ X ≡ 2;
   */
  ;
  return X;
}


